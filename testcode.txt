/*
Description: (currently) mock code for our arduino movements/funtionality
Authors: Ethan, Lukas, Jacob, Gabby, Andrea, Henry.
Date(s): Feb - April 2019
*/
#include <Servo.h>
#include <Adafruit_MotorShield.h>

// Create the motor shield object with the default I2C address
Adafruit_MotorShield AFMS = Adafruit_MotorShield();


// Select which 'port' M1, M2, M3 or M4. In this case, M1
Adafruit_DCMotor *myMotor = AFMS.getMotor(1);
Adafruit_DCMotor *myMotorR = AFMS.getMotor(2);



void setup() {
//According to the example code for Arduino Motor shield v2, this starts the shield.
AFMS.begin();
myMotor->setSpeed(150);
myMotorR->setSpeed(150);
myMotor->run(FORWARD);
myMotor->run(FORWARD);
// turn on motor
myMotor->run(RELEASE);
myMotorR->run(RELEASE);

}


void loop() {


// It appears that to control something over pwm on the arduino we simply have to use the analogWrite(); function. It doesn't look to require any extra libraries.

//moving
//forwards
//backwards (moving+turning+speed)

//moving as in turning (15deg incriments as many times as we need to get the desired turn in)
//15

//sensing things with sensor A

//sensing things with sensor B

}

void leftForward() {
  myMotor->run(FORWARD) //starts the motor at default speed set above
  delay(1000) // a delay that we will probably replace with a variable later
  myMotor->run(RELEASE) // Stops the motor.

}


void rightForward() {
 myMotorR->run(FORWARD) //starts the motor at default speed set above
 delay(1000) // a delay that we will probably replace with a variable later
 myMotorR->run(RELEASE) // Stops the motor.


}


